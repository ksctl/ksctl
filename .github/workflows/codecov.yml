name: codecov
on:
  push:
    paths:
    - 'internal/**'
    - 'pkg/**'
    - 'cmd/cli/**'
    branches:
    - main
  pull_request:
    paths:
    - 'internal/**'
    - 'pkg/**'
    - 'cmd/cli/**'
    branches:
    - main

jobs:
  codecov:
    name: codecov coverage
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 18
        cache: yarn
        cache-dependency-path: ./website
    - uses: actions/setup-go@v2
      with:
        go-version: '1.20'
    - name: Run coverage (UTILS)
      working-directory: pkg/utils
      run: |
         go test -race -coverprofile=../../coverage-utils.out -covermode=atomic -v
         cd ../..
    - name: Run coverage (LOGGER)
      working-directory: pkg/logger
      run: |
        go test -race -coverprofile=../../coverage-logger.out -covermode=atomic -v
        cd ../..
    - name: Run coverage (K3S)
      working-directory: internal/k8sdistros/k3s
      run: |
        go test -race -coverprofile=../../../coverage-k3s.out -covermode=atomic -v
        cd ../../..
    - name: Run coverage (CIVO)
      working-directory: internal/cloudproviders/civo
      run: |
         go test -race -coverprofile=../../../coverage-civo.out -covermode=atomic -v
         cd ../../..
    - name: Run coverage (AZURE)
      working-directory: internal/cloudproviders/azure
      run: |
         go test -race -coverprofile=../../../coverage-azure.out -covermode=atomic -v
         cd ../../..
    - name: Run coverage (LOCAL)
      working-directory: internal/cloudproviders/local
      run: |
         go test -race -coverprofile=../../../coverage-local.out -covermode=atomic -v
         cd ../../..
    - name: Run coverage (TESTS)
      working-directory: test
      run: |
        export KSCTL_FAKE_FLAG_ENABLED="1"
        go test -bench=. -benchtime=1x -coverprofile=../coverage-mock-test.out -covermode=atomic -v
        cd ../
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
