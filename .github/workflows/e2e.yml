name: e2e for ksctl

on:
  workflow_dispatch:
  workflow_call:

jobs:
  create-infra:
    env:
      PS4: '+\[\033[0;33m\](\[\033[0;36m\]${BASH_SOURCE##*/}:${LINENO}\[\033[0;33m\])\[\033[0m\] '
    environment: e2e

    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: test/gh-runner
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
      - name: setup ansible latest
        run: |
          sudo apt update -y
          sudo apt install software-properties-common -y
          sudo add-apt-repository --yes --update ppa:ansible/ansible
          sudo apt install ansible -y
      - uses: actions/setup-go@v5
        with:
          go-version: "stable"

      - name: terraform init
        working-directory: test/gh-runner/infra
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_S3 }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_S3 }}
          TF_VAR_hcloud_token: ${{ secrets.HETZNER_TOKEN }}
        run: |
          terraform init

      - name: ssh setup
        env:
          E2E_SSH_PVT_KEY: ${{secrets.SSH_PRIVATE_KEY}}
          E2E_SSH_PUB_KEY: ${{secrets.SSH_PUBLIC_KEY}}
        run: |
          set -e
          mkdir -p ~/.ssh
          echo "$E2E_SSH_PVT_KEY" > ~/.ssh/id_ed25519
          echo "$E2E_SSH_PUB_KEY" > ~/.ssh/id_ed25519.pub
          chmod 400 ~/.ssh/id_ed25519
          chmod 644 ~/.ssh/id_ed25519.pub

      - name: terraform apply
        working-directory: test/gh-runner/infra
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_S3 }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_S3 }}
          TF_VAR_hcloud_token: ${{ secrets.HETZNER_TOKEN }}
          TF_VAR_ssh_pvt_loc: ~/.ssh/id_ed25519
          TF_VAR_ssh_pub_loc: ~/.ssh/id_ed25519.pub
        run: |
          terraform apply --auto-approve

      - name: extract the public ip and configure the ansible inventory
        working-directory: test/gh-runner/infra
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_S3 }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_S3 }}
        run: |
          KSCTL_RUNNER_IP=$(terraform output -json ip_address | jq -r '.|join(",")')
          cd ../configure/templates
          go run writeInventory.go \
            -ips $KSCTL_RUNNER_IP \
            -user root \
            -ssh-pvt-loc ~/.ssh/id_ed25519 \
            -inventory-loc /tmp/inventory.ini

      - name: building amd64 binary
        working-directory: test/e2e
        run: |
          GOOS="linux" GOARCH="amd64" go build -v -o /tmp/ksctl-e2e-amd64 .

      - name: add VM as github runner
        working-directory: test/gh-runner/configure
        env:
          GH_TOKEN: ${{ secrets.GH_PAT_CUSTOM_RUNNER }}
          ANSIBLE_HOST_KEY_CHECKING: "False"
        run: |
          ansible-playbook -i /tmp/inventory.ini setup.yml

      - name: transfer binary
        working-directory: test/gh-runner/configure
        env:
          ANSIBLE_HOST_KEY_CHECKING: "False"
        run: |
          ansible-playbook -i /tmp/inventory.ini transfer.yml

  local-e2e:
    uses: ./.github/workflows/e2e-local.yml
    needs: ["create-infra"]
    secrets: inherit

  azure-e2e:
    uses: ./.github/workflows/e2e-azure.yml
    needs: ["create-infra"]
    secrets: inherit

  aws-e2e:
    uses: ./.github/workflows/e2e-aws.yml
    needs: ["create-infra"]
    secrets: inherit

  destroy_infra:
    if: always()
    needs: [local-e2e, azure-e2e, aws-e2e]

    env:
      PS4: '+\[\033[0;33m\](\[\033[0;36m\]${BASH_SOURCE##*/}:${LINENO}\[\033[0;33m\])\[\033[0m\] '
    environment: e2e

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
      - name: setup ansible latest
        run: |
          sudo apt update -y
          sudo apt install software-properties-common -y
          sudo add-apt-repository --yes --update ppa:ansible/ansible
          sudo apt install ansible -y
      - uses: actions/setup-go@v5
        with:
          go-version: "stable"

      - name: terraform init
        working-directory: test/gh-runner/infra
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_S3 }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_S3 }}
          TF_VAR_hcloud_token: ${{ secrets.HETZNER_TOKEN }}
        run: |
          terraform init

      - name: ssh setup
        env:
          E2E_SSH_PVT_KEY: ${{secrets.SSH_PRIVATE_KEY}}
          E2E_SSH_PUB_KEY: ${{secrets.SSH_PUBLIC_KEY}}
        run: |
          mkdir -p ~/.ssh
          echo "$E2E_SSH_PVT_KEY" > ~/.ssh/id_ed25519
          echo "$E2E_SSH_PUB_KEY" > ~/.ssh/id_ed25519.pub
          chmod 400 ~/.ssh/id_ed25519
          chmod 644 ~/.ssh/id_ed25519.pub

      - name: extract the public ip and configure the ansible inventory
        working-directory: test/gh-runner/infra
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_S3 }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_S3 }}
        run: |
          KSCTL_RUNNER_IP=$(terraform output -json ip_address | jq -r '.|join(",")')
          cd ../configure/templates
          go run writeInventory.go \
            -ips $KSCTL_RUNNER_IP \
            -user root \
            -ssh-pvt-loc ~/.ssh/id_ed25519 \
            -inventory-loc /tmp/inventory.ini

      - name: rm VM as github runner
        env:
          GH_TOKEN: ${{ secrets.GH_PAT_CUSTOM_RUNNER }}
          ANSIBLE_HOST_KEY_CHECKING: "False"
        working-directory: test/gh-runner/configure
        run: |
          ansible-playbook -i /tmp/inventory.ini destroy.yml

      - name: terraform destroy
        working-directory: test/gh-runner/infra
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_S3 }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_S3 }}
          TF_VAR_hcloud_token: ${{ secrets.HETZNER_TOKEN }}
          TF_VAR_ssh_pvt_loc: ~/.ssh/id_ed25519
          TF_VAR_ssh_pub_loc: ~/.ssh/id_ed25519.pub
        if: always()
        run: |
          terraform destroy --auto-approve

  notification:
    runs-on: ubuntu-latest
    environment: e2e
    env:
      PS4: '+\[\033[0;33m\](\[\033[0;36m\]${BASH_SOURCE##*/}:${LINENO}\[\033[0;33m\])\[\033[0m\] '
      DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
      RED: 16711680
      GREEN: 65280
      BLUE: 255
      DISCORD_TITLE: "e2e Workflow Summary"
      GITHUB_RUN: ${{ github.event.repository.html_url }}/actions/runs/${{ github.run_id }}

    if: always()
    needs: [local-e2e, azure-e2e, aws-e2e, destroy_infra]
    steps:
      - name: Discord
        run: |
          set -xe
          local_status=$(echo "${{ needs.local-e2e.result }}")
          azure_status=$(echo "${{ needs.azure-e2e.result }}")
          aws_status=$(echo "${{ needs.aws-e2e.result }}")
          infra_status=$(echo "${{ needs.destroy_infra.result }}")

          if [[ $local_status == "failure" || $azure_status == "failure" || $aws_status == "failure" || $infra_status == "failure" ]]; then
            SUMMARY='### FAILURE :warning:'

            if [[ $local_status == "failure" ]]; then
              SUMMARY+='\n- Local-Kind'
            fi

            if [[ $azure_status == "failure" ]]; then
              SUMMARY+='\n- Azure'
            fi

            if [[ $aws_status == "failure" ]]; then
              SUMMARY+='\n- AWS'
            fi

            if [[ $infra_status == "failure" ]]; then
              SUMMARY+='\n- INFRA'
            fi

            curl --fail \
              -X POST \
              -H "Content-Type: application/json" \
              -d "{\"embeds\": [{ \"title\": \"${DISCORD_TITLE}\", \"description\": \"${SUMMARY}\", \"url\": \"${GITHUB_RUN}\", \"color\": $RED, \"timestamp\": \"$(date -u +"%Y-%m-%dT%H:%M:%SZ")\", \"footer\": {\"text\": \"no bots were harmed\"}, \"author\": {\"name\": \"github actions\" } }]}" \
              $DISCORD_WEBHOOK_URL

          else
            SUMMARY='### SUCCESSFUL :rocket:'

            curl --fail \
              -X POST \
              -H "Content-Type: application/json" \
              -d "{\"embeds\": [{ \"title\": \"${DISCORD_TITLE}\", \"description\": \"${SUMMARY}\", \"url\": \"${GITHUB_RUN}\", \"color\": $GREEN, \"timestamp\": \"$(date -u +"%Y-%m-%dT%H:%M:%SZ")\", \"footer\": {\"text\": \"no bots were harmed\"}, \"author\": {\"name\": \"github actions\" } }]}" \
              $DISCORD_WEBHOOK_URL
          fi
