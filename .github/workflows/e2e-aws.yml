name: e2e for azure

on:
  workflow_dispatch:
  workflow_call:

jobs:
  execute-aws:
    environment: e2e
    env:
      E2E_FLAGS: debug
      KUBECONFIG: ${{ vars.KUBECONFIG_KSCTL_LOC }}
      PS4: '+\[\033[0;33m\](\[\033[0;36m\]${BASH_SOURCE##*/}:${LINENO}\[\033[0;33m\])\[\033[0m\] '
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    runs-on: e2e
    defaults:
      run:
        working-directory: test/e2e

    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            paths:
              - 'internal/cloudproviders/aws/*'
              - 'internal/k8sdistros/k3s/*'
              - 'internal/k8sdistros/kubeadm/*'
              - 'internal/k8sdistros/*'
              - 'internal/storage/**'
              - 'test/gh-runner/**'
              - 'pkg/helpers/**'
              - 'pkg/logger/**'
              - 'test/e2e/*'
              - 'test/e2e/aws/*'
              - 'go.mod'
              - 'go.sum'
              - 'pkg/controllers/**'
              - 'pkg/resources/**'
              - '.github/workflows/e2e-aws.yml'

        # run only if some file in 'src' folder was changed
      - name: create (managed)
        if: steps.changes.outputs.paths == 'true'
        run: |
          set -xe
          echo -e "\033[1;34m@@@\033[0m \033[1;35mFeature in Progress!\033[0m \033[1;34m@@@\033[0m"
          # ksctl-e2e-amd64 -op create -file aws/create.json
          # ksctl-e2e-amd64 -op get -file aws/get.json

      - name: create (k3s ha)
        if: steps.changes.outputs.paths == 'true'
        run: |
          set -xe
          ksctl-e2e-amd64 -op create -file aws/create-ha.json
          ksctl-e2e-amd64 -op get -file aws/get.json

      - name: create (kubeadm ha)
        if: steps.changes.outputs.paths == 'true'
        run: |
          set -xe
          ksctl-e2e-amd64 -op create -file aws/create-ha-kubeadm.json
          ksctl-e2e-amd64 -op get -file aws/get.json

      - name: switch
        if: steps.changes.outputs.paths == 'true'
        run: |
          echo -e "\033[1;34m@@@\033[0m \033[1;35mFeature in Progress!\033[0m \033[1;34m@@@\033[0m"
          # echo -e "\033[1;34m@@@\033[0m \033[1;35mManaged Cluster\033[0m \033[1;34m@@@\033[0m"
          # ksctl-e2e-amd64 -op switch -file aws/switch.json
          # tree ~/.ksctl/state
          # jq -r . ~/.ksctl/state/aws/managed/test-e2e-aws\ XXYYZZ/state.json
          # sleep 5s
          # kubectl get nodes -owide

          echo -e "\033[1;34m@@@\033[0m \033[1;35mHA Cluster (K3s)\033[0m \033[1;34m@@@\033[0m"
          ksctl-e2e-amd64 -op switch -file aws/switch-ha.json
          tree ~/.ksctl/state
          jq -r . ~/.ksctl/state/aws/ha/test-e2e-ha-aws\ ap-south-1/state.json
          sleep 5s
          kubectl get nodes -owide

          echo -e "\033[1;34m@@@\033[0m \033[1;35mHA Cluster (kubeadm)\033[0m \033[1;34m@@@\033[0m"
          ksctl-e2e-amd64 -op switch -file aws/switch-ha-kubeadm.json
          tree ~/.ksctl/state
          jq -r . ~/.ksctl/state/aws/ha/test-e2e-kubeadm-ha-aws\ us-east-1/state.json
          sleep 5s
          kubectl get nodes -owide

      - name: scaledown kubeadm
        if: steps.changes.outputs.paths == 'true'
        run: |
          set -xe
          ksctl-e2e-amd64 -op switch -file aws/switch-ha-kubeadm.json

          sleep 30s
          ksctl-e2e-amd64 -op scaledown -file aws/scaledown-ha-kubeadm.json

          kubectl get nodes -owide
          jq -r . ~/.ksctl/state/aws/ha/test-e2e-kubeadm-ha-aws\ us-east-1/state.json

      - name: scaleup kubeadm
        if: steps.changes.outputs.paths == 'true'
        run: |
          set -xe
          ksctl-e2e-amd64 -op switch -file aws/switch-ha-kubeadm.json

          sleep 1m
          ksctl-e2e-amd64 -op scaleup -file aws/scaleup-ha-kubeadm.json

          kubectl get nodes -owide
          jq -r . ~/.ksctl/state/aws/ha/test-e2e-kubeadm-ha-aws\ us-east-1/state.json

      - name: scaledown k3
        if: steps.changes.outputs.paths == 'true'
        run: |

          set -xe
          ksctl-e2e-amd64 -op switch -file aws/switch-ha.json

          sleep 30s
          ksctl-e2e-amd64 -op scaledown -file aws/scaledown-ha.json

          kubectl get nodes -owide
          jq -r . ~/.ksctl/state/aws/ha/test-e2e-ha-aws\ ap-south-1/state.json

      - name: scaleup k3
        if: steps.changes.outputs.paths == 'true'
        run: |
          set -xe

          ksctl-e2e-amd64 -op switch -file aws/switch-ha.json

          sleep 30s
          ksctl-e2e-amd64 -op scaleup -file aws/scaleup-ha.json

          kubectl get nodes -owide
          jq -r . ~/.ksctl/state/aws/ha/test-e2e-ha-aws\ ap-south-1/state.json

      - name: delete (managed)
        if: always() && steps.changes.outputs.paths == 'true'
        run: |
          set -xe
          echo -e "\033[1;34m@@@\033[0m \033[1;35mFeature in Progress!\033[0m \033[1;34m@@@\033[0m"
          # ksctl-e2e-amd64 -op delete -file aws/delete.json

      - name: delete (ha k3s)
        if: always() && steps.changes.outputs.paths == 'true'
        run: |
          set -xe

          ksctl-e2e-amd64 -op delete -file aws/delete-ha.json

      - name: delete (ha kubeadm)
        if: always() && steps.changes.outputs.paths == 'true'
        run: |
          set -xe

          ksctl-e2e-amd64 -op delete -file aws/delete-ha-kubeadm.json
