name: e2e for azure

on:
  workflow_dispatch:
  workflow_call:

jobs:
  execute-azure:
    environment: e2e
    env:
      E2E_FLAGS: debug
      KUBECONFIG: ${{ vars.KUBECONFIG_KSCTL_LOC }}
      PS4: '+\[\033[0;33m\](\[\033[0;36m\]${BASH_SOURCE##*/}:${LINENO}\[\033[0;33m\])\[\033[0m\] '
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
    runs-on: e2e
    defaults:
      run:
        working-directory: test/e2e

    steps:
      - uses: actions/checkout@v5
      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            paths:
              - 'test/gh-runner/**'
              - 'test/e2e/*'
              - 'test/e2e/azure/*'
              - 'go.mod'
              - 'go.sum'
              - '.github/workflows/e2e-azure.yml'
              - 'pkg/**'
              - '!pkg/provider/aws/**'
              - '!pkg/provider/local/**'
              - '!**/*.md'
              - '!**/*.json'
              - '!**/*.yaml'
              - '!.dockerignore'
              - '!.gitignore'

      - name: create (managed)
        if: steps.changes.outputs.paths == 'true'
        run: |
          set -xe
          ksctl-e2e-amd64 -op create -file azure/create.json
          ksctl-e2e-amd64 -op info -file azure/info.json

      - name: create (k3s selfmanaged)
        if: steps.changes.outputs.paths == 'true'
        run: |
          set -xe
          ksctl-e2e-amd64 -op create -file azure/create-selfmanaged.json
          ksctl-e2e-amd64 -op info -file azure/info-selfmanaged.json

      - name: create (kubeadm selfmanaged)
        if: steps.changes.outputs.paths == 'true'
        run: |
          set -xe
          ksctl-e2e-amd64 -op create -file azure/create-selfmanaged-kubeadm.json
          ksctl-e2e-amd64 -op info -file azure/info-selfmanaged-kubeadm.json

      - name: get
        if: steps.changes.outputs.paths == 'true'
        run: |
          set -xe
          ksctl-e2e-amd64 -op get -file azure/get.json

      - name: switch
        if: steps.changes.outputs.paths == 'true'
        run: |
          echo -e "\033[1;34m@@@\033[0m \033[1;35mManaged Cluster\033[0m \033[1;34m@@@\033[0m"

          ksctl-e2e-amd64 -op switch -file azure/switch.json -path-kubeconfig ${{ env.KUBECONFIG }}

          tree ~/.ksctl/state

          jq -r . ~/.ksctl/state/azure/managed/test-e2e-azure\ eastus/state.json

          sleep 5s

          kubectl get nodes -owide

          echo -e "\033[1;34m@@@\033[0m \033[1;35mselfmanaged Cluster (K3s)\033[0m \033[1;34m@@@\033[0m"

          ksctl-e2e-amd64 -op switch -file azure/switch-selfmanaged.json -path-kubeconfig ${{ env.KUBECONFIG }}

          tree ~/.ksctl/state

          jq -r . ~/.ksctl/state/azure/selfmanaged/test-e2e-selfmanaged-azure\ eastus2/state.json

          sleep 5s

          kubectl get nodes -owide

          echo -e "\033[1;34m@@@\033[0m \033[1;35mselfmanaged Cluster (kubeadm)\033[0m \033[1;34m@@@\033[0m"

          ksctl-e2e-amd64 -op switch -file azure/switch-selfmanaged-kubeadm.json -path-kubeconfig ${{ env.KUBECONFIG }}

          tree ~/.ksctl/state

          jq -r . ~/.ksctl/state/azure/selfmanaged/test-e2e-kubeadm-selfmanaged-azure\ centralindia/state.json

          sleep 5s

          kubectl get nodes -owide

      - name: scaledown kubeadm
        if: steps.changes.outputs.paths == 'true'
        run: |
          set -xe
          ksctl-e2e-amd64 -op switch -file azure/switch-selfmanaged-kubeadm.json -path-kubeconfig ${{ env.KUBECONFIG }}

          sleep 30s
          ksctl-e2e-amd64 -op scaledown -file azure/scaledown-selfmanaged-kubeadm.json

          kubectl get nodes -owide
          jq -r . ~/.ksctl/state/azure/selfmanaged/test-e2e-kubeadm-selfmanaged-azure\ centralindia/state.json

      - name: scaleup kubeadm
        if: steps.changes.outputs.paths == 'true'
        run: |
          set -xe
          ksctl-e2e-amd64 -op switch -file azure/switch-selfmanaged-kubeadm.json -path-kubeconfig ${{ env.KUBECONFIG }}

          sleep 1m
          ksctl-e2e-amd64 -op scaleup -file azure/scaleup-selfmanaged-kubeadm.json

          kubectl get nodes -owide

          jq -r . ~/.ksctl/state/azure/selfmanaged/test-e2e-kubeadm-selfmanaged-azure\ centralindia/state.json

      - name: scaledown k3
        if: steps.changes.outputs.paths == 'true'
        run: |

          set -xe
          ksctl-e2e-amd64 -op switch -file azure/switch-selfmanaged.json -path-kubeconfig ${{ env.KUBECONFIG }}

          sleep 30s
          ksctl-e2e-amd64 -op scaledown -file azure/scaledown-selfmanaged.json

          kubectl get nodes -owide
          jq -r . ~/.ksctl/state/azure/selfmanaged/test-e2e-selfmanaged-azure\ eastus2/state.json

      - name: scaleup k3
        if: steps.changes.outputs.paths == 'true'
        run: |
          set -xe

          ksctl-e2e-amd64 -op switch -file azure/switch-selfmanaged.json -path-kubeconfig ${{ env.KUBECONFIG }}

          sleep 30s
          ksctl-e2e-amd64 -op scaleup -file azure/scaleup-selfmanaged.json

          kubectl get nodes -owide
          jq -r . ~/.ksctl/state/azure/selfmanaged/test-e2e-selfmanaged-azure\ eastus2/state.json

      - name: delete (managed)
        if: always() && steps.changes.outputs.paths == 'true'
        run: |
          set -xe

          ksctl-e2e-amd64 -op delete -file azure/delete.json

      - name: delete (selfmanaged k3s)
        if: always() && steps.changes.outputs.paths == 'true'
        run: |
          set -xe

          ksctl-e2e-amd64 -op delete -file azure/delete-selfmanaged.json

      - name: delete (selfmanaged kubeadm)
        if: always() && steps.changes.outputs.paths == 'true'
        run: |
          set -xe

          ksctl-e2e-amd64 -op delete -file azure/delete-selfmanaged-kubeadm.json
