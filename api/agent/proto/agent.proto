syntax = "proto3";

package ksctlAgent;

option go_package = "./pb";

enum ScaleOperation {
  SCALE_UP = 0;
  SCALE_DOWN = 1;
}

enum ApplicationOperation {
  CREATE = 0;
  DELETE = 1;
  UPDATE = 2;
}
enum ApplicationType {
  APP = 0;
  CNI = 1;
}

service KsctlAgent {
  rpc Scale(ReqScale) returns (ResScale);
  rpc LoadBalancer(ReqLB) returns (ResLB);
  rpc Application(ReqApplication) returns (ResApplication);
}


message ReqScale {
  ScaleOperation operation = 1;
  uint32 desiredNoOfWP = 2;
  string nodeSizeOfWP = 3;
}

message ResScale {
  bool isUpdated = 1;
}

message Application {
  ApplicationType appType = 1;
  bytes appStackInfo = 2;
}

message ReqApplication {
  ApplicationOperation operation = 1;
  repeated Application apps = 2;
}

message ResApplication {
  repeated string failedApps = 1;
}

message PortMappings {
  uint64 from = 1;
  uint64 to = 2;
  uint64 protocol = 3;
}

message ReqLB {
  // private Ip of controlplanes
  // nodePorts and corresponding port for Loadbalancer svc
  // Protocol
  repeated string privateIPs = 1;
  repeated PortMappings ports = 2;
  // need network, region and apikeys
}

message ResLB {
  string loadBalancerPublicIP = 1;
  string createdResourceId = 2;
}
