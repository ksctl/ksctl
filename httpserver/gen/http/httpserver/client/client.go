// Code generated by goa v3.12.4, DO NOT EDIT.
//
// httpserver client HTTP transport
//
// Command:
// $ goa gen github.com/kubesimplify/ksctl/httpserver/design -o httpserver

package client

import (
	"context"
	"net/http"

	goahttp "goa.design/goa/v3/http"
	goa "goa.design/goa/v3/pkg"
)

// Client lists the httpserver service endpoint HTTP clients.
type Client struct {
	// CreateHa Doer is the HTTP client used to make requests to the create ha
	// endpoint.
	CreateHaDoer goahttp.Doer

	// DeleteHa Doer is the HTTP client used to make requests to the delete ha
	// endpoint.
	DeleteHaDoer goahttp.Doer

	// Scaledown Doer is the HTTP client used to make requests to the scaledown
	// endpoint.
	ScaledownDoer goahttp.Doer

	// Scaleup Doer is the HTTP client used to make requests to the scaleup
	// endpoint.
	ScaleupDoer goahttp.Doer

	// GetHealth Doer is the HTTP client used to make requests to the get health
	// endpoint.
	GetHealthDoer goahttp.Doer

	// GetClusters Doer is the HTTP client used to make requests to the get
	// clusters endpoint.
	GetClustersDoer goahttp.Doer

	// RestoreResponseBody controls whether the response bodies are reset after
	// decoding so they can be read again.
	RestoreResponseBody bool

	scheme  string
	host    string
	encoder func(*http.Request) goahttp.Encoder
	decoder func(*http.Response) goahttp.Decoder
}

// NewClient instantiates HTTP clients for all the httpserver service servers.
func NewClient(
	scheme string,
	host string,
	doer goahttp.Doer,
	enc func(*http.Request) goahttp.Encoder,
	dec func(*http.Response) goahttp.Decoder,
	restoreBody bool,
) *Client {
	return &Client{
		CreateHaDoer:        doer,
		DeleteHaDoer:        doer,
		ScaledownDoer:       doer,
		ScaleupDoer:         doer,
		GetHealthDoer:       doer,
		GetClustersDoer:     doer,
		RestoreResponseBody: restoreBody,
		scheme:              scheme,
		host:                host,
		decoder:             dec,
		encoder:             enc,
	}
}

// CreateHa returns an endpoint that makes HTTP requests to the httpserver
// service create ha server.
func (c *Client) CreateHa() goa.Endpoint {
	var (
		encodeRequest  = EncodeCreateHaRequest(c.encoder)
		decodeResponse = DecodeCreateHaResponse(c.decoder, c.RestoreResponseBody)
	)
	return func(ctx context.Context, v any) (any, error) {
		req, err := c.BuildCreateHaRequest(ctx, v)
		if err != nil {
			return nil, err
		}
		err = encodeRequest(req, v)
		if err != nil {
			return nil, err
		}
		resp, err := c.CreateHaDoer.Do(req)
		if err != nil {
			return nil, goahttp.ErrRequestError("httpserver", "create ha", err)
		}
		return decodeResponse(resp)
	}
}

// DeleteHa returns an endpoint that makes HTTP requests to the httpserver
// service delete ha server.
func (c *Client) DeleteHa() goa.Endpoint {
	var (
		encodeRequest  = EncodeDeleteHaRequest(c.encoder)
		decodeResponse = DecodeDeleteHaResponse(c.decoder, c.RestoreResponseBody)
	)
	return func(ctx context.Context, v any) (any, error) {
		req, err := c.BuildDeleteHaRequest(ctx, v)
		if err != nil {
			return nil, err
		}
		err = encodeRequest(req, v)
		if err != nil {
			return nil, err
		}
		resp, err := c.DeleteHaDoer.Do(req)
		if err != nil {
			return nil, goahttp.ErrRequestError("httpserver", "delete ha", err)
		}
		return decodeResponse(resp)
	}
}

// Scaledown returns an endpoint that makes HTTP requests to the httpserver
// service scaledown server.
func (c *Client) Scaledown() goa.Endpoint {
	var (
		encodeRequest  = EncodeScaledownRequest(c.encoder)
		decodeResponse = DecodeScaledownResponse(c.decoder, c.RestoreResponseBody)
	)
	return func(ctx context.Context, v any) (any, error) {
		req, err := c.BuildScaledownRequest(ctx, v)
		if err != nil {
			return nil, err
		}
		err = encodeRequest(req, v)
		if err != nil {
			return nil, err
		}
		resp, err := c.ScaledownDoer.Do(req)
		if err != nil {
			return nil, goahttp.ErrRequestError("httpserver", "scaledown", err)
		}
		return decodeResponse(resp)
	}
}

// Scaleup returns an endpoint that makes HTTP requests to the httpserver
// service scaleup server.
func (c *Client) Scaleup() goa.Endpoint {
	var (
		encodeRequest  = EncodeScaleupRequest(c.encoder)
		decodeResponse = DecodeScaleupResponse(c.decoder, c.RestoreResponseBody)
	)
	return func(ctx context.Context, v any) (any, error) {
		req, err := c.BuildScaleupRequest(ctx, v)
		if err != nil {
			return nil, err
		}
		err = encodeRequest(req, v)
		if err != nil {
			return nil, err
		}
		resp, err := c.ScaleupDoer.Do(req)
		if err != nil {
			return nil, goahttp.ErrRequestError("httpserver", "scaleup", err)
		}
		return decodeResponse(resp)
	}
}

// GetHealth returns an endpoint that makes HTTP requests to the httpserver
// service get health server.
func (c *Client) GetHealth() goa.Endpoint {
	var (
		decodeResponse = DecodeGetHealthResponse(c.decoder, c.RestoreResponseBody)
	)
	return func(ctx context.Context, v any) (any, error) {
		req, err := c.BuildGetHealthRequest(ctx, v)
		if err != nil {
			return nil, err
		}
		resp, err := c.GetHealthDoer.Do(req)
		if err != nil {
			return nil, goahttp.ErrRequestError("httpserver", "get health", err)
		}
		return decodeResponse(resp)
	}
}

// GetClusters returns an endpoint that makes HTTP requests to the httpserver
// service get clusters server.
func (c *Client) GetClusters() goa.Endpoint {
	var (
		decodeResponse = DecodeGetClustersResponse(c.decoder, c.RestoreResponseBody)
	)
	return func(ctx context.Context, v any) (any, error) {
		req, err := c.BuildGetClustersRequest(ctx, v)
		if err != nil {
			return nil, err
		}
		resp, err := c.GetClustersDoer.Do(req)
		if err != nil {
			return nil, goahttp.ErrRequestError("httpserver", "get clusters", err)
		}
		return decodeResponse(resp)
	}
}
