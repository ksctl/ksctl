pipeline {
    agent any
    stages {

        stage('Build binary') {
            when {
                anyOf {
                    changeset "go.mod"
                    changeset "go.sum"
                    changeset "internal/**"
                    changeset "pkg/**"
                    changeset "cmd/cli/**"
                    changeset "test/e2e/**"
                }
            }
            steps{
                sh '''
                #!/bin/bash

                export PATH="$PATH:/usr/local/go/bin"

                sudo apt install tree -y

                go version

                cd ./cmd/cli

                go get -d
                go build -v -o ksctl .

                chmod +x ksctl
                sudo mv ksctl /usr/local/bin

                # Setup the configurations dir
                rm -rf ${HOME}/.ksctl

                mkdir -p ${HOME}/.ksctl/cred
                mkdir -p ${HOME}/.ksctl/config/civo/ha
                mkdir -p ${HOME}/.ksctl/config/azure/ha
				mkdir -p ${HOME}/.ksctl/config/aws/ha
                mkdir -p ${HOME}/.ksctl/config/azure/managed
                mkdir -p ${HOME}/.ksctl/config/civo/managed
				mkdir -p ${HOME}/.ksctl/config/aws/managed
                mkdir -p ${HOME}/.ksctl/config/local/managed

                echo "SETUP DONE"
                '''
            }
        }

        stage('version') {
            steps {
                sh '''
                    #!/bin/bash
                    echo "local managed"
                    cd ~
                    ksctl version
                '''
            }
        }
        stage('Trigger Other Pipelines') {
            when {
                anyOf {
                    changeset "go.mod"
                    changeset "go.sum"
                    changeset "internal/**"
                    changeset "pkg/**"
                    changeset "cmd/cli/**"
                    changeset "test/e2e/**"
                }
            }
            failFast true
            parallel {
                stage('cloud provider') {
                    stages {
                        stage('trigger local') {
                            when {
                                anyOf {
                                    changeset "go.mod"
                                    changeset "go.sum"
                                    changeset "test/e2e/**"
                                    changeset "internal/cloudproviders/local/**"
                                    changeset "pkg/utils/**"
                                    changeset "pkg/resources/**"
									changeset "pkg/controllers/**"
                                }
                            }
                            steps {
                                build job: 'ksctl (local)', parameters: [string(name: 'GIT_BRANCH', value: "main")]
                            }
                        }
                        stage('trigger civo') {
                            when {
                                anyOf {
                                    changeset "go.mod"
                                    changeset "go.sum"
                                    changeset "test/e2e/**"
                                    changeset "internal/cloudproviders/civo/**"
                                    changeset "pkg/utils/**"
									changeset "pkg/controllers/**"
                                    changeset "pkg/resources/**"
                                }
                            }
                            steps {
                                build job: 'ksctl (civo)', parameters: [string(name: 'GIT_BRANCH', value: "main")]
                            }
                        }
                        stage('trigger azure') {
                            when {
                                anyOf {
                                    changeset "go.mod"
                                    changeset "go.sum"
                                    changeset "test/e2e/**"
                                    changeset "internal/cloudproviders/azure/**"
                                    changeset "pkg/utils/**"
                                    changeset "pkg/resources/**"
									changeset "pkg/controllers/**"
                                }
                            }
                            steps {
                                build job: 'ksctl (azure)', parameters: [string(name: 'GIT_BRANCH', value: "main")]
                            }
                        }
                    }
                }
            }
        }
    }
    post {
		always {
			emailext body: '''
                [KSCTL-e2e Testing on main branch]
                $DEFAULT_CONTENT
                ''', mimeType: 'text/html', subject: 'NO-REPLY ksctl-bot: $DEFAULT_SUBJECT', to: 'ksctl-kubesimplify@googlegroups.com'
		}
	}
}
