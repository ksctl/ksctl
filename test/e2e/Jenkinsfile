pipeline {
    agent any
    environment {
        DISCORD_SEC = credentials("discord_secret")
    }
    stages {
        // stage('Git-Checkout') {
        //     steps {
        //         git branch: 'main', url: 'https://github.com/kubesimplify/ksctl.git'
        //     }
        // }

        stage('Build binary') {
            when {
                anyOf {
                    changeset "**/go.mod"
                    changeset "**/go.sum"
                    changeset "api/**"
                    changeset "cli/**"
                    changeset "test/e2e/**"
                }
            }
            steps{
                sh '''
                #!/bin/bash

                export PATH="$PATH:/usr/local/go/bin"

                sudo apt install tree -y

                go version

                cd ./cli
                ls -laR
                # Check if sudo access
                go get -d
                go build -v -o ksctl .

                ls -la
                chmod +x ksctl
                sudo mv ksctl /usr/local/bin
                # Setup the configurations dir
                rm -rf ${HOME}/.ksctl
                mkdir -p ${HOME}/.ksctl/cred

                mkdir -p ${HOME}/.ksctl/config/civo/ha
                mkdir -p ${HOME}/.ksctl/config/azure/ha
                mkdir ${HOME}/.ksctl/config/azure/managed
                mkdir ${HOME}/.ksctl/config/civo/managed
                mkdir ${HOME}/.ksctl/config/aws
                mkdir ${HOME}/.ksctl/config/local

                echo "SETUP DONE"
                '''
            }
        }

        stage('version') {
            steps {
                sh '''
                    #!/bin/bash
                    echo "local managed"
                    cd ~
                    ksctl version
                '''
            }
        }
        stage('Trigger Other Pipelines') {
            when {
                anyOf {
                    changeset "**/go.mod"
                    changeset "**/go.sum"
                    changeset "api/**"
                    changeset "cli/**"
                    changeset "test/e2e/**"
                }
            }
            failFast true
            parallel {
                stage('cloud provider') {
                    stages {
                        stage('trigger local') {
                            steps {
                                build job: 'ksctl (local)', parameters: [string(name: 'GIT_BRANCH', value: "${env.GIT_BRANCH}")]
                            }
                        }
                        stage('trigger civo') {
                            steps {
                                build job: 'ksctl (civo)', parameters: [string(name: 'GIT_BRANCH', value: "${env.GIT_BRANCH}")]
                            }
                        }
                        stage('trigger azure') {
                            steps {
                                build job: 'ksctl (azure)', parameters: [string(name: 'GIT_BRANCH', value: "${env.GIT_BRANCH}")]
                            }
                        }
                    }
                }
            }
        }
    }
    post {
		always {
			discordSend description: 'e2e test', footer: 'ksctl', image: '', link: "${env.BUILD_URL}", result: "${currentBuild.currentResult}", scmWebUrl: '', thumbnail: '', title: 'Jenkins ksctl', webhookURL: "${DISCORD_SEC}"
		}
	}
}
